name: Test pull requests of new images

# Controls when the workflow will run
on:
  pull_request:
    branches: [master]
    paths:
      - "**.conf"
      - "**.preset"
    types:
      - opened
      - synchronize

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Remove toolstree directory if exists
        run: sudo rm -rf ./hub-images/toolstree
        
      - name: Change ownership of files for checkout
        env:
          SERVER_WORKDIR: ${{ secrets.SERVER_WORKDIR }}
        run: sudo chown -Rf $USER:$USER $SERVER_WORKDIR || true
    
      - uses: actions/checkout@v2

      - name: Check for duplicated Output directives
        working-directory: ./hub-images
        run: |
          ./validate_directories.sh

      # Prepare our custom builder
      - name: Prepare our builder
        run: |
          sudo apt-get install --assume-yes --no-install-recommends debian-archive-keyring

      # Configure GPG
      - name: Configure the GPG Key
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | sudo gpg --import
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import

      # Setup mkosi
      - name: setup-mkosi
        uses: systemd/mkosi@main

      - name: Change ownership of files for checkout
        env:
          SERVER_WORKDIR: ${{ secrets.SERVER_WORKDIR }}
        run: sudo chown -R $USER:$USER $SERVER_WORKDIR || true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      #- name: Debug
      #  uses: mxschmitt/action-tmate@v3

      # Setup mkosi tools tree
      - name: Setup mkosi tools tree
        working-directory: ./hub-images
        run: |
          sudo mkosi --distribution fedora --include=mkosi-tools --output-dir=./toolstree    

      # Runs a set of commands using the runners shell
      - name: Rebuild images
        run: |
          REBUILD_NEED_FOR=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -E '.conf|.preset' | awk -F'/' '{print $1 "/" $2 "/" $3}' | sort -u)

          root_dir="$(pwd)"
          for dir in ${REBUILD_NEED_FOR[@]}; do cd "$dir" && sudo mkosi; cd $root_dir; done
          cd hub-images
          sudo ./clean-artifacts.sh
